% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_test_results.R
\name{add_test_results}
\alias{add_test_results}
\title{Identify significant covariates with FWER, FDR, or no p-value adjustment}
\usage{
add_test_results(
  vimpermsim,
  alpha = 0.05,
  init_num_vars,
  to_show = c("FWER", "FDR", "unadjusted")
)
}
\arguments{
\item{vimpermsim}{List, an output from \code{vim_perm_sim()} function.}

\item{alpha}{Numeric, the significance level, must be between 0 and 1.}

\item{init_num_vars}{Numeric, the number of covariates originally included in
the data. Required to correctly apply the Benjamini-Hochberg (FDR) and Holm
(FWER) p-value correction}

\item{to_show}{Character, one of \code{"FWER"}, \code{"FDR"} or \code{"unadjusted"}.
\itemize{
\item \code{"FWER"} (the default) - the output of \code{add_test_results()} includes
unadjusted, Benjamini-Hochberg (FDR) and Holm (FWER) adjusted p-values
together with the decision whether the variable is significant or not (1 -
significant, 0 - not significant) according to the chosen criterium.
\item \code{"FDR"} - the output includes both unadjusted and FDR adjusted p-values along
with the decision.
\item \verb{"unadjusted:} - the output contains only raw, unadjusted p-values together
with the decision.
}}
}
\value{
A list of length 3 containing the following elements:
\itemize{
\item \code{vim_simulated} -  a data frame with variable importances stored in a
\code{vimpermsim} input object (obtained from the \code{vim_perm_sim()} function).
\item \code{test_results} - a list consisting of 2 data frames called \code{pooled} and
\code{per_variable}. The \code{pooled} data frame contains pooled p-values, while the
\code{per_variable} data frame stores per variable p-values. Both data frames
also contain decisions about variable importance based on the displayed
p-values. The type of decisions displayed (based on FWER/FDR/unadjusted
p-values) depends on the selected value of the \code{to_show} parameter.
}

In fact, the output of the \code{add_test_results()} function is the output of
\code{vim_perm_sim()} with an additional layer - the \code{test_results} list.
}
\description{
Calculate pooled or per variable p-values and identify significant variables
when using FWER, FDR or no p-value adjustment for a given alpha level of
significance.
}
\examples{
data(mtcars)
# Create vimpermsim object first
# When working with real data, increase num.trees value or leave default
# Here this parameter is set to a small value in order to reduce the runtime
cars_vps <- vim_perm_sim(
  entire_data = mtcars, outcome_var = "vs", nsim = 30,
  num.trees = 50
)
init_num_vars <- ncol(x = mtcars) - 1

# Display decisions based on all available p-values (FWER, FDR, unadjusted)
cars_add_fwer <- add_test_results(
  vimpermsim = cars_vps, alpha = 0.05,
  init_num_vars = init_num_vars
)

# Display decisions based on FDR adjusted and unadjusted p-values, expect warnning
cars_add_fdr <- add_test_results(
  vimpermsim = cars_vps, alpha = 0.05,
  init_num_vars = init_num_vars, to_show = "FDR"
)

# Display decisions based on unadjusted p-values (Type1_confirmed column)
cars_add_unadj <- add_test_results(
  vimpermsim = cars_vps, alpha = 0.05,
  init_num_vars = init_num_vars, to_show = "unadjusted"
)
}
