stages:
  - test

test_R:
  stage: test
  image: rocker/r-ver:4.4.2
  script:
    - echo "Testing R installation"
    - R --version
  only:
    - main
    - master
    - merge_requests



# stages:
#   - check
#
# variables:
#   R_KEEP_PKG_SOURCE: "yes"
#
# cache:
#   key: packages
#   paths:
#     - /usr/local/lib/R/site-library
#
# # Define a job template
# .setup_job_template: &setup_job_template
#   script:
#     - echo "Running R CMD check with R version $R_VERSION"
#     - R --version
#
#     - apt-get update -y
#     - apt-get install -y pandoc libcurl4-openssl-dev libssl-dev libxml2-dev
#
#     - R -e "install.packages('remotes', repos='https://cloud.r-project.org')"
#     - R -e "remotes::install_deps(dependencies = TRUE)"
#
#     - R -e "install.packages('rcmdcheck', repos='https://cloud.r-project.org')"
#
#     - R CMD check . --no-manual --compact-vignettes=gs+qpdf
#   cache:
#     paths:
#       - /usr/local/lib/R/site-library
#   only:
#     - main
#     - master
#     - merge_requests
#
# # Job for R 4.3.3
# R_CMD_CHECK_4_3_3:
#   stage: check
#   image: rocker/r-ver:4.3.3
#   <<: *setup_job_template
#   variables:
#     R_VERSION: "4.3.3"
#
# # Job for R 4.4.2
# R_CMD_CHECK_4_4_2:
#   stage: check
#   image: rocker/r-ver:4.4.2
#   <<: *setup_job_template
#   variables:
#     R_VERSION: "4.4.2"
#
# # Job for R 4.5.0
# R_CMD_CHECK_4_5_0:
#   stage: check
#   image: rocker/r-ver:4.5.0
#   <<: *setup_job_template
#   variables:
#     R_VERSION: "4.5.0"

# Trigger pipeline on push and merge requests
# workflow:
#   rules:
#     - if: $CI_PIPELINE_SOURCE == "push"
#     - if: $CI_PIPELINE_SOURCE == "merge_request_event"
