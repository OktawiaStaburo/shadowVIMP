# Below the simplest CI/CD pipeline to check if I can connect with the runners
# stages:
#   - test
#
# test_job:
#   stage: test
#   image: alpine:latest
#   script:
#     - echo "CI/CD Pipeline is working!"
#   only:
#     - main
#     - master
#     - merge_requests

# Below code is intended to verify the R installation within the CI/CD environment.
# stages:
#   - test
#
# test_R:
#   stage: test
#   image: rocker/r-ver:4.4.2
#   script:
#     - echo "Testing R installation"
#     - R --version
#   only:
#     - main
#     - merge_requests

stages:
  - test

cache:
  key: "R-packages"
  paths:
    - R/library/

default:
  before_script:
    # Update system packages and install additional dependencies if needed
    - apt-get update && apt-get install -y \
        libcurl4-openssl-dev \
        libssl-dev \
        libxml2-dev \
        build-essential \
        libfontconfig1-dev \
        libfreetype6-dev \
        libfribidi-dev \
        libharfbuzz-dev \
        libblas-dev \
        liblapack-dev \
        libjpeg-dev \
        libpng-dev \
        libtiff5-dev
    - mkdir -p R/library
    - export R_LIBS_USER=$PWD/R/library
    - Rscript -e 'install.packages("remotes", repos = "https://cloud.r-project.org", lib=Sys.getenv("R_LIBS_USER"))'
    - Rscript -e 'remotes::install_deps(dependencies = TRUE, repos = "https://cloud.r-project.org", lib=Sys.getenv("R_LIBS_USER"))'
    - Rscript -e 'print(installed.packages()[, "Package"])'

check_R_4_4_2:
  stage: test
  image: rocker/tidyverse:4.4.2
  script:
    - echo "Running R CMD check on R 4.4.2"
    - R CMD build .
    - R CMD check *.tar.gz --no-manual --as-cran
  artifacts:
    paths:
      - "*.Rcheck/"
  only:
    - main
    - merge_requests



# check_R_4_3_3:
#   stage: test
#   image: rocker/r-ver:4.3.3
#   script:
#     - echo "Running R CMD check on R 4.3.3"
#     - R CMD build .
#     - "R CMD check *tar.gz --no-manual --as-cran"
#   artifacts:
#     paths:
#       - "*.Rcheck/"
#   only:
#     - main
#     - merge_requests



